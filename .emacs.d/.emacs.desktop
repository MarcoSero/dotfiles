;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Sat Apr 25 09:45:05 2015
;; Desktop file format version 206
;; Emacs version 24.4.1

;; Global section:
(setq desktop-saved-frameset [frameset 1 (21819 21521 136857 0) (desktop . "206") "marco@c02n48x4g3qd.home" nil nil ((((font-backend mac-ct) (font . "-*-Inconsolata-normal-normal-normal-*-15-*-*-*-m-0-iso10646-1") (border-width . 0) (internal-border-width . 0) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars) (foreground-color . "#dfe1e8") (background-color . "#2b303b") (mouse-color . "black") (border-color . "black") (screen-gamma) (line-spacing) (left-fringe . 8) (right-fringe . 8) (tool-bar-lines . 0) (title) (fullscreen . maximized) (menu-bar-lines . 1) (icon-type) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 0) (alpha) (horizontal-scroll-bars . t) (display-type . color) (background-mode . dark) (cursor-color . "white") (environment) (frameset--id . "A8CB-AD4B-55F6-7356") (frameset--mini t . t) (modeline . t) (minibuffer . t) (unsplittable) (icon-name) (display . "Mac") (explicit-name) (tool-bar-position . top) (visibility . t) (height . 50) (width . 178) (left . 0) (top . 23)) ((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 34) (min-pixel-width-ignore . 32) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 1440) (pixel-height . 834) (total-width . 180) (total-height . 49) (normal-height . 1.0) (normal-width . 1.0) (buffer "*scratch*" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 1) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated) (point . 192) (start . 1))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name "/Users/marco/Yammer/app/TAGS")
(setq tags-table-list '("/Users/marco/Yammer/app/TAGS"))
(setq search-ring '("cursor" "color" "evil" "clip" "my mak" "pare" "auto-com" "load" "lint" "hask" "img" "ocean" "color" "flyspell" "start" "comple"))
(setq regexp-search-ring '("avatar" "blink"))
(setq register-alist '((8776) (48 . "\nnWords :: IO TrainingDict\nnWords = do\n  ws <- getDataFileName \"big.txt\" >>= B.readFile\n  return $ (train . lowerWords) ws\n\n")))
(setq file-name-history '("~/Yammer/app/TAGS" "/Users/marco/Yammer/app/TAGS" "~/Yammer/app/TAGS" "~/Yammer/app/" "~/Yammer/app/Yammer/TAGS" "/Users/marco/Yammer/app/Yammer/Attribution.txt" "/Users/marco/.emacs" "/Users/marco/Dropbox/Dev/blog.marcosero.com/.git/COMMIT_EDITMSG" "/Users/marco/Dropbox/Dev/blog.marcosero.com/css/main.css" "/Users/marco/Dropbox/Dev/blog.marcosero.com/index.html" "/Users/marco/Dropbox/Dev/blog.marcosero.com/_layouts/default.html" "~/Dropbox/Dev/Haskell/spelling/" "/Users/marco/.vimrc" "/Users/marco/Dropbox/Dev/Haskell/spelling/README.md" "/Users/marco/Dropbox/Dev/Haskell/spelling/spelling.hs" "/Users/marco/Dropbox/Dev/Haskell/spelling/Main.hs" "~/Dropbox/Dev/Haskell/spelling/" "~/Dropbox/Dev/Haskell/" "/Users/marco/Dropbox/Dev/Haskell/test2.hs" "~/Dropbox/Dev/Haskell/spelling/" "/Users/marco/Dropbox/Dev/blog.marcosero.com/css/main.css" "/Users/marco/Dropbox/Dev/blog.marcosero.com/_config.yml" "/Users/marco/Dropbox/Dev/blog.marcosero.com/Gemfile" "~/Dropbox/Dev/Haskell/spelling/" "/Users/marco/.emacs.d/elpa/base16-theme-20130413.1655/base16-ocean-theme.el" "/Users/marco/Dropbox/Dev/blog.marcosero.com/_posts/2014-12-18-norvig-haskell-spelling-corrector.md" "/Users/marco/.emacs" "/Users/marco/Yammer/workfeed/config/experiments/ios_ipad_cards_v3.yml" "/Users/marco/Yammer/workfeed/config/experiments/acc_chat_typing.yml" "/Users/marco/Dropbox/Dev/blog.marcosero.com/_layouts/post.html"))

;; Buffer section -- buffers listed in same order as in buffer list:
